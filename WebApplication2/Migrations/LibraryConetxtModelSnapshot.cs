// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryConetxtModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApplication2.Models.Book", b =>
                {
                    b.Property<uint>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("book_id")
                        .HasColumnType("int(12) unsigned zerofill")
                        .HasComment("图书序号");

                    b.Property<string>("BookAuthor")
                        .IsRequired()
                        .HasColumnName("book_author")
                        .HasColumnType("varchar(16)")
                        .HasComment("作者")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("BookBrief")
                        .HasColumnName("book_brief")
                        .HasColumnType("text")
                        .HasComment("内容简介")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("BookClccode")
                        .HasColumnName("book_clccode")
                        .HasColumnType("varchar(16)")
                        .HasComment("CLC 分类号")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("BookCode")
                        .IsRequired()
                        .HasColumnName("book_code")
                        .HasColumnType("varchar(24)")
                        .HasComment("图书编号或条码号")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("BookCover")
                        .HasColumnName("book_cover")
                        .HasColumnType("varchar(64)")
                        .HasComment("封面")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("BookIsbn")
                        .HasColumnName("book_isbn")
                        .HasColumnType("varchar(16)")
                        .HasComment("ISBN 书号")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<ushort?>("BookLanguageId")
                        .HasColumnName("book_language_id")
                        .HasColumnType("smallint(4) unsigned zerofill")
                        .HasComment("语言ID");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnName("book_name")
                        .HasColumnType("varchar(32)")
                        .HasComment("书名")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<uint?>("BookPages")
                        .HasColumnName("book_pages")
                        .HasColumnType("int unsigned")
                        .HasComment("页数");

                    b.Property<DateTime>("BookPressDate")
                        .HasColumnName("book_press_date")
                        .HasColumnType("date")
                        .HasComment("出版日期");

                    b.Property<decimal?>("BookPrice")
                        .HasColumnName("book_price")
                        .HasColumnType("decimal(8,2)")
                        .HasComment("价格");

                    b.Property<string>("BookPublisher")
                        .HasColumnName("book_publisher")
                        .HasColumnType("varchar(32)")
                        .HasComment("出版社")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<DateTime?>("BookPurchaseDate")
                        .HasColumnName("book_purchase_date")
                        .HasColumnType("date")
                        .HasComment("入馆时间");

                    b.Property<ushort?>("BookStatusId")
                        .HasColumnName("book_status_id")
                        .HasColumnType("smallint(4) unsigned zerofill")
                        .HasComment("图书状态ID");

                    b.HasKey("BookId");

                    b.ToTable("book");
                });

            modelBuilder.Entity("WebApplication2.Models.BookLanguage", b =>
                {
                    b.Property<ushort>("LanguageId")
                        .HasColumnName("language_id")
                        .HasColumnType("smallint(4) unsigned zerofill");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnName("language_name")
                        .HasColumnType("varchar(16)")
                        .HasComment("语言类型")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.HasKey("LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("book_language");
                });

            modelBuilder.Entity("WebApplication2.Models.BookStatus", b =>
                {
                    b.Property<ushort>("StatusId")
                        .HasColumnName("status_id")
                        .HasColumnType("smallint(4) unsigned zerofill");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnName("status_name")
                        .HasColumnType("varchar(16)")
                        .HasComment("图书状态")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.HasKey("StatusId")
                        .HasName("PRIMARY");

                    b.ToTable("book_status");
                });

            modelBuilder.Entity("WebApplication2.Models.Borrow", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("BookId")
                        .HasColumnName("book_id")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("BorrowContinueTimes")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("borrow_continue_times")
                        .HasColumnType("int unsigned")
                        .HasDefaultValueSql("'0'")
                        .HasComment("续借次数");

                    b.Property<int?>("DelayDays")
                        .HasColumnName("delay_days")
                        .HasColumnType("int")
                        .HasComment("超时天数");

                    b.Property<decimal?>("DelayExpense")
                        .HasColumnName("delay_expense")
                        .HasColumnType("decimal(8,2)")
                        .HasComment("超时产生金额");

                    b.Property<DateTime?>("ExpectReturnDate")
                        .HasColumnName("expect_return_date")
                        .HasColumnType("date")
                        .HasComment("应还日期");

                    b.Property<decimal?>("FineExpense")
                        .HasColumnName("fine_expense")
                        .HasColumnType("decimal(16,2)")
                        .HasComment("罚款金额");

                    b.Property<DateTime?>("LendDate")
                        .HasColumnName("lend_date")
                        .HasColumnType("date")
                        .HasComment("借书日期");

                    b.Property<uint?>("LendOperatorId")
                        .HasColumnName("lend_operator_id")
                        .HasColumnType("int unsigned")
                        .HasComment("借书操作员");

                    b.Property<uint>("ReaderId")
                        .HasColumnName("reader_id")
                        .HasColumnType("int unsigned");

                    b.Property<int?>("ReturnOperatorId")
                        .HasColumnName("return_operator_id")
                        .HasColumnType("int")
                        .HasComment("还书操作员");

                    b.HasKey("Id");

                    b.ToTable("borrow");
                });

            modelBuilder.Entity("WebApplication2.Models.Reader", b =>
                {
                    b.Property<uint>("ReaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reader_id")
                        .HasColumnType("int(8) unsigned zerofill")
                        .HasComment("读者ID");

                    b.Property<uint?>("ReaderBorrowQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reader_borrow_quantity")
                        .HasColumnType("int unsigned")
                        .HasDefaultValueSql("'0'")
                        .HasComment("借阅数量");

                    b.Property<string>("ReaderDepartment")
                        .HasColumnName("reader_department")
                        .HasColumnType("varchar(16)")
                        .HasComment("单位")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("ReaderEmail")
                        .HasColumnName("reader_email")
                        .HasColumnType("varchar(32)")
                        .HasComment("电子邮件")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<ushort?>("ReaderGenderId")
                        .HasColumnName("reader_gender_id")
                        .HasColumnType("smallint(4) unsigned zerofill")
                        .HasComment("性别");

                    b.Property<string>("ReaderName")
                        .IsRequired()
                        .HasColumnName("reader_name")
                        .HasColumnType("varchar(16)")
                        .HasComment("读者姓名")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("ReaderPassword")
                        .IsRequired()
                        .HasColumnName("reader_password")
                        .HasColumnType("varchar(128)")
                        .HasComment("密码")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<string>("ReaderPhonenumber")
                        .HasColumnName("reader_phonenumber")
                        .HasColumnType("varchar(16)")
                        .HasComment("电话号码")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<byte[]>("ReaderPhoto")
                        .HasColumnName("reader_photo")
                        .HasColumnType("blob")
                        .HasComment("读者照片");

                    b.Property<DateTime?>("ReaderRegisterDate")
                        .HasColumnName("reader_register_date")
                        .HasColumnType("date")
                        .HasComment("注册日期");

                    b.Property<ushort>("ReaderRolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reader_roles_id")
                        .HasColumnType("smallint(4) unsigned zerofill")
                        .HasDefaultValueSql("'0000'")
                        .HasComment("角色权限");

                    b.Property<ushort?>("ReaderStatusId")
                        .HasColumnName("reader_status_id")
                        .HasColumnType("smallint(4) unsigned zerofill")
                        .HasComment("读者状态");

                    b.Property<ushort>("ReaderTypeId")
                        .HasColumnName("reader_type_id")
                        .HasColumnType("smallint(4) unsigned zerofill")
                        .HasComment("读者类别");

                    b.HasKey("ReaderId");

                    b.ToTable("reader");
                });

            modelBuilder.Entity("WebApplication2.Models.ReaderGender", b =>
                {
                    b.Property<ushort>("GenderId")
                        .HasColumnName("gender_id")
                        .HasColumnType("smallint(4) unsigned zerofill");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnName("gender_name")
                        .HasColumnType("varchar(16)")
                        .HasComment("性别")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.HasKey("GenderId")
                        .HasName("PRIMARY");

                    b.ToTable("reader_gender");
                });

            modelBuilder.Entity("WebApplication2.Models.ReaderRole", b =>
                {
                    b.Property<ushort>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("smallint(4) unsigned zerofill");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnName("role_name")
                        .HasColumnType("varchar(16)")
                        .HasComment("角色权限")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.HasKey("RoleId")
                        .HasName("PRIMARY");

                    b.ToTable("reader_role");
                });

            modelBuilder.Entity("WebApplication2.Models.ReaderStatus", b =>
                {
                    b.Property<ushort>("StatusIdR")
                        .HasColumnName("status_id_r")
                        .HasColumnType("smallint(4) unsigned zerofill");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnName("status_name")
                        .HasColumnType("varchar(16)")
                        .HasComment("状态")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.HasKey("StatusIdR")
                        .HasName("PRIMARY");

                    b.ToTable("reader_status");
                });

            modelBuilder.Entity("WebApplication2.Models.ReaderType", b =>
                {
                    b.Property<ushort>("TypeId")
                        .HasColumnName("type_id")
                        .HasColumnType("smallint(4) unsigned zerofill");

                    b.Property<int?>("TypeBorrowContinueTimes")
                        .HasColumnName("type_borrow_continue_times")
                        .HasColumnType("int")
                        .HasComment("可续借次数");

                    b.Property<int?>("TypeBorrowDays")
                        .HasColumnName("type_borrow_days")
                        .HasColumnType("int")
                        .HasComment("可借书天数");

                    b.Property<int?>("TypeBorrowQuantity")
                        .HasColumnName("type_borrow_quantity")
                        .HasColumnType("int")
                        .HasComment("可借书数量");

                    b.Property<DateTime?>("TypeExpirationDate")
                        .HasColumnName("type_expiration_date")
                        .HasColumnType("date")
                        .HasComment("借书许可到期日期");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnName("type_name")
                        .HasColumnType("varchar(16)")
                        .HasComment("类型")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_bin");

                    b.Property<decimal?>("TypeTimeoutExpense")
                        .HasColumnName("type_timeout_expense")
                        .HasColumnType("decimal(8,2)")
                        .HasComment("超时费用");

                    b.HasKey("TypeId")
                        .HasName("PRIMARY");

                    b.ToTable("reader_type");
                });
#pragma warning restore 612, 618
        }
    }
}
